*WhiteWash.txt* Add and remove whitespace with strong opinions.

Author:  Michael "Irish" O'Neill
License: Same terms as Vim itself (see |license|)

==============================================================================
FEATURES                                                 *WhiteWash* *whitewash*

* Remove trailing whitespace. |WhiteWashTrailing|
* Remove sequential whitespace. |WhiteWashSequential|
* Add spaces after commas. |WhiteWashCommas|
* Optional aggressive mode. |WhiteWashAggressive|

==============================================================================
COMMANDS                               *WhiteWash-commands* *whitewash-commands*

								  *:WhiteWash*
:[range]WhiteWash	Run all |WhiteWash| rules enabled in |WhiteWash.auto|.
			By default, all rules are enabled, but the aggressive
			mode is not. If a [range] is not given, act on the
			entire buffer.

:[range]WhiteWashAggressive         *:WhiteWashAggressive* *WhiteWashAggressive*
			Run all |WhiteWash| rules enabled in |WhiteWash.auto|
			as if their |WhiteWash.aggressive| setting were
			enabled. If a [range] is not given, act on the entire
			buffer. Aggressive mode can be made the default on a
			per-rule basis. >
 let g:WhiteWash.aggressive.<rule> = 1
<
                                            *:WhiteWashCommas* *WhiteWashCommas*
:[range]WhiteWashCommas Run the "commas" rule, which will add a single space
			after every comma which is not already followed by
			whitespace. By default, effort is made to avoid adding
			spaces to anything that looks like a number using
			commas for digit grouping (e.g. 123,456 will not be
			changed, but 12,34,56 will). In aggressive mode, add a
			space after every comma not already followed by space,
			regardless of what the rest of the string looks like.
			If a [range] is not given, act on the entire buffer.
			This rule is enabled default and will be run whenever
			|:WhiteWash| is called.
			Note Be very careful using this around regular
			expressions or other parsing code, especially in
			aggressive mode.
>
 let g:WhiteWash.auto.commas = 0       " Do not run this rule by default
 let g:WhiteWash.aggressive.commas = 1 " Enable aggressive mode by default
<
:[range]WhiteWashSequential         *:WhiteWashSequential* *WhiteWashSequential*
			Run the "sequential" rule, which will remove
			sequential spaces between words. This includes things
			like two spaces after a period, but excludes things
			like leading tabs so as not to destroy indenting.
>
 let g:WhiteWash.auto.sequential = 0       " Do not run this rule by default
 let g:WhiteWash.aggressive.sequential = 1 " Enable aggressive mode by default
<
:[range]WhiteWashTrailing               *:WhiteWashTrailing* *WhiteWashTrailing*


==============================================================================
OPTIONS                                  *WhiteWash-options* *whitewash-options*

WhiteWash.auto                                                *WhiteWash.auto*

WhiteWash.aggressive                                    *WhiteWash.aggressive*
